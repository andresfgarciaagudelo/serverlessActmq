 
# Service name
service: or-pub-sub-orders
frameworkVersion: '2'

#Providers
provider:
  name: aws
  region: us-east-2
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  logs:
    websocket: true
    role: arn:aws:iam::593096747136:role/or-pub-sub-orders-dev-us-east-2-lambdaRole
  apiGateway:
    metrics: true

  # IAM Roles
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
      Resource:
        - Fn::GetAtt: [OrdersTable, Arn]
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource:
        - "arn:aws:execute-api:*:*:**/@connections/*"

# All our functions handlers
functions:
  connectionHandler:
    handler: handler.connectionHandler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  defaultHandler:
    handler: handler.defaultHandler
    events:
      - websocket:
          route: $default
  sendMessageHandler:
    handler: handler.sendMessageHandler
    events:
      - websocket:
          route: sendMessage

# AWS Resources
resources:
  Resources:
    OrdersTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: ordersTable
